/**
 * Software end-user license agreement.
 *
 * The LICENSE.TXT containing the license is located in the JGPSS project.
 * License.txt can be downloaded here:
 * href="http://www-eio.upc.es/~Pau/index.php?q=node/28
 *
 * NOTICE TO THE USER: BY COPYING, INSTALLING OR USING THIS SOFTWARE OR PART OF
 * THIS SOFTWARE, YOU AGREE TO THE   TERMS AND CONDITIONS OF THE LICENSE AGREEMENT
 * AS IF IT WERE A WRITTEN AGREEMENT NEGOTIATED AND SIGNED BY YOU. THE LICENSE
 * AGREEMENT IS ENFORCEABLE AGAINST YOU AND ANY OTHER LEGAL PERSON ACTING ON YOUR
 * BEHALF.
 * IF, AFTER READING THE TERMS AND CONDITIONS HEREIN, YOU DO NOT AGREE TO THEM,
 * YOU MAY NOT INSTALL THIS SOFTWARE ON YOUR COMPUTER.
 * UPC IS THE OWNER OF ALL THE INTELLECTUAL PROPERTY OF THE SOFTWARE AND ONLY
 * AUTHORIZES YOU TO USE THE SOFTWARE IN ACCORDANCE WITH THE TERMS SET OUT IN
 * THE LICENSE AGREEMENT.
 */
package views;

import model.entities.Storage;
import java.awt.Frame;
import java.util.*;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import utils.Constants;
import utils.VarGlobals;

/**
 *
 * @author M.Dolores
 * @author Ezequiel Andujar Montes
 */
@SuppressWarnings({"rawtypes", "unchecked"})
public class StoragesView extends javax.swing.JDialog {

    private final static long serialVersionUID = 1L;

    Storage storageAux = null;
    int posStorage = -1;

    /**
     * Creates new form PantallaStorages
     *
     * @param parent
     * @param verOK
     */
    public StoragesView(Frame parent, boolean verOK) {

        super(parent, Constants.tituloStorages, true);
        initComponents();
        initListeners();
        populateCombo();

        TextValor.setText(getSelectedStorageValue());
        botoOK.setEnabled(false);
        botoSave.setEnabled(false);
        if (!verOK) {
            botoOK.setVisible(false);
        } else {
            String storageName = comboStorages.getSelectedItem().toString();
            String storageValue = TextValor.getText();
            botoOK.setEnabled(!storageName.isEmpty() && !storageValue.isEmpty());
            botoSave.setVisible(false);
        }
    }

    /**
     * Returns the currently selected Storage value
     *
     * @return
     */
    private String getSelectedStorageValue() {
        return VarGlobals.model.getStorages().stream()//
                .filter(s -> s.getNom().equals((String) comboStorages.getSelectedItem()))//
                .map(s -> String.valueOf(s.getValor()))//
                .findFirst()//                 
                .orElse("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        comboStorages = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextValor = new javax.swing.JTextField();
        botoOK = new javax.swing.JButton();
        botoSave = new javax.swing.JButton();
        botoCanel = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        comboStorages.setEditable(true);
        comboStorages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStoragesActionPerformed(evt);
            }
        });

        jLabel1.setText("Storage:");

        jLabel2.setText("Value:");

        TextValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextValorActionPerformed(evt);
            }
        });

        botoOK.setText("Ok");
        botoOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoOKActionPerformed(evt);
            }
        });

        botoSave.setText("Save");
        botoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoSaveActionPerformed(evt);
            }
        });

        botoCanel.setText("Cancel");
        botoCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoCanelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(botoCanel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 140, Short.MAX_VALUE)
                        .add(botoSave)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(botoOK))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(TextValor)
                            .add(comboStorages, 0, 150, Short.MAX_VALUE))))
                .add(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(71, 71, 71)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(comboStorages, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .add(24, 24, 24)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(TextValor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botoOK)
                    .add(botoSave)
                    .add(botoCanel))
                .add(23, 23, 23))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botoCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoCanelActionPerformed
        VarGlobals.continuar = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_botoCanelActionPerformed

    private void botoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoSaveActionPerformed

        try {
            if (!existeixStorage((String) comboStorages.getSelectedItem())) {
                storageAux = new Storage((String) comboStorages.getSelectedItem(), new Integer(TextValor.getText()));
                VarGlobals.model.getStorages().add(storageAux);
                botoOK.setEnabled(true);
                populateCombo();
            } else {
                VarGlobals.model.getStorages().get(posStorage).setValor(new Integer(TextValor.getText()));
            }
        } catch (NumberFormatException nf) {
            generarPantallaError(Constants.errorDades);
        }
        VarGlobals.esModificat = true;
    }//GEN-LAST:event_botoSaveActionPerformed
    private void generarPantallaError(String mensage) {
        ErrorView perror = new ErrorView(mensage);
        perror.setLocationRelativeTo(this);
        perror.setVisible(true);
        perror.dispose();
    }
    private void comboStoragesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStoragesActionPerformed

        String storageName = (String) comboStorages.getSelectedItem();
        String storageValue = TextValor.getText();

        if (!storageName.isEmpty()) {
            if (existeixStorage(storageName)) {
                TextValor.setText(String.valueOf(storageAux.getValor()));
            }
        }
        botoSave.setEnabled(!storageName.isEmpty() && !storageValue.isEmpty());
        botoOK.setEnabled(!storageName.isEmpty() && !storageValue.isEmpty());
    }//GEN-LAST:event_comboStoragesActionPerformed

    private void botoOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoOKActionPerformed

        VarGlobals.continuar = true;
        String selectedStorage = (String) comboStorages.getSelectedItem();        
        VarGlobals.nomStorageSeleccionat = selectedStorage;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_botoOKActionPerformed

    private void TextValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextValorActionPerformed

    @SuppressWarnings("unchecked")
    private void populateCombo() {
        if (VarGlobals.model.getStorages().size() > 0) {
            comboStorages.setModel(new DefaultComboBoxModel(agafarNomsStorages(VarGlobals.model.getStorages())));
            comboStorages.setEnabled(true);
            if (storageAux != null) {
                comboStorages.setSelectedItem(storageAux.getNom());
                TextValor.setText(String.valueOf(storageAux.getValor()));
            }
        }
    }

    private Object[] agafarNomsStorages(ArrayList<Storage> vStorages) {

        return vStorages.stream()//
                .map(s -> s.getNom())//
                .collect(Collectors.toList())//
                .toArray();
    }

    private boolean existeixStorage(String titol) {
        boolean b = false;
        Storage st;
        for (int i = 0; ((i < VarGlobals.model.getStorages().size()) && !b); i++) {
            st = VarGlobals.model.getStorages().get(i);
            if (st.getNom().equals(titol)) {
                storageAux = VarGlobals.model.getStorages().get(i);
                posStorage = i;
                b = true;
            }
        }
        return b;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextValor;
    private javax.swing.JButton botoCanel;
    private javax.swing.JButton botoOK;
    private javax.swing.JButton botoSave;
    private javax.swing.JComboBox comboStorages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void initListeners() {

        TextValor.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkInputValues();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkInputValues();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkInputValues();
            }
        });
    }

    private void checkInputValues() {

        String storageName = (String) comboStorages.getSelectedItem();
        String storageValue = TextValor.getText();
        botoSave.setEnabled(!storageName.isEmpty() && !storageValue.isEmpty());
    }
}
